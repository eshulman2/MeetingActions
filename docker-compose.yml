version: '3.8'

services:

  redis:
    image: docker.io/library/redis:latest
    container_name: redis-cache
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis-data:/data
    command: '--requirepass 12345'


  jira-agent:
    image: jira-agent
    build:
      context: .
      dockerfile: containers/Dockerfile.jira-agent
    user: "1000:1000"
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - MODEL_API_KEY=${MODEL_API_KEY}
      - CONFIG_PATH=/app/config.json
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./configs/jira-agent-config.json:/app/config.json:ro,z
      - ./logs:/app/logs:rw,z
    restart: unless-stopped

  google-agent:
    image: google-agent
    build:
      context: .
      dockerfile: containers/Dockerfile.google-agent
    user: "1000:1000"
    ports:
      - "8001:8000"
    environment:
      - PYTHONPATH=/app
      - MODEL_API_KEY=${MODEL_API_KEY}
      - CONFIG_PATH=/app/config.json
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./configs/google-agent-config.json:/app/config.json:ro,z
      - ./logs:/app/logs:rw,z
    restart: unless-stopped

  action-items-workflows:
    image: action-items-workflows
    build:
      context: .
      dockerfile: containers/Dockerfile.action-items-workflows
    user: "1000:1000"
    ports:
      - "8002:8000"
    environment:
      - PYTHONPATH=/app
      - MODEL_API_KEY=${MODEL_API_KEY}
      - CONFIG_PATH=/app/config.json
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./configs/action-items-config.json:/app/config.json:ro,z
      - ./logs:/app/logs:rw,z
    restart: unless-stopped

  registry-service:
    image: registry-service
    build:
      context: .
      dockerfile: containers/Dockerfile.registry-service
    user: "1000:1000"
    ports:
      - "8003:8000"
    environment:
      - PYTHONPATH=/app
      - CONFIG_PATH=/app/config.json
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./configs/registry-service-config.json:/app/config.json:ro,z
      - ./logs:/app/logs:rw,z
    depends_on:
      - redis
    restart: unless-stopped

  google-mcp:
    image: google-tools-mcp
    user: "1000:1000"
    build:
      context: .
      dockerfile: containers/Dockerfile.google-mcp
    ports:
      - "8100:8100"
    environment:
      - PYTHONPATH=/app
      - MODEL_API_KEY=${MODEL_API_KEY}
      - CONFIG_PATH=/app/config.json
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./configs/google-mcp-config.json:/app/config.json:ro,z
      - ./logs:/app/logs:rw,z
      - ./service_account.json:/app/service_account.json:ro,Z
    restart: unless-stopped

  jira-mcp:
    image: jira-tools-mcp
    user: "1000:1000"
    build:
      context: .
      dockerfile: containers/Dockerfile.jira-mcp
    ports:
      - "8101:8101"
    environment:
      - PYTHONPATH=/app
      - JIRA_API_TOKEN=${JIRA_API_TOKEN}
      - CONFIG_PATH=/app/config.json
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./configs/jira-mcp-config.json:/app/config.json:ro,z
      - ./logs:/app/logs:rw,z
    restart: unless-stopped

networks:
  default:
    driver: bridge

volumes:
  redis-data:
    driver: local
